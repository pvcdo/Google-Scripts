function alterarPlanilhasDaPasta(){

  var nomes = [
    "nome da planilha 1"
    "nome da planilha 2"
    "nome da planilha 3"
    .
    .
    .
    "nome da planilha n"
  ]

  var pasta = DriveApp.getFolderById("id da pasta onde estão as planilhas cujos nomes estão no array") 
  
  for(let i = 0;i <= nomes.length-1;i++){

    var plan_atual_id = pasta.getFilesByName(nomes[i]).next().getId()
    SpreadsheetApp.setActiveSpreadsheet(SpreadsheetApp.openById(plan_atual_id))

    Logger.log(nomes[i])
    
    //Navegando por abas
      //for(let j = 0; j<=1; j++){
        //var plan_atual = SpreadsheetApp.getActiveSpreadsheet().getSheets()[j]

        /*1*****************************************/

        //formatacaoCondicional(plan_atual)
        //ordenarFormatacaoCondicional(plan_atual)
        //limparFormatacaoCondicional(plan_atual)
        
        /*2*****************************************/

        //removerValidacaoDeDados(plan_atual)
        //validacaoDeDados(plan_atual)

        /*3*****************************************/

        //alterarTextos(plan_atual)
        //deletarDados(plan_atual)

        /*4*****************************************/

        //incluirColunas(plan_atual)
        //ocultarColunas(plan_atual,2,4) ; ocultarColunas(plan_atual,19,3)
        //deletarLinhasColunas(plan_atual)        
        
        /*5*****************************************/

        //protecaoDeIntervalo(plan_atual, ultima_linha)

        /*6*****************************************/

        //congelarColunas(plan_atual,6)
        //alterarNomeAba(plan_atual, "RESIDÊNCIA")        
        
      //}

    //Navegando em aba específica em cada planilha

      var nome_residencia = "RESIDÊNCIA"
      var nome_consolidado = "POSTO DE SAÚDE"

      var plan_residencia = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(nome_residencia)
      var plan_consolidado = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(nome_consolidado)    

      /*1*****************************************/

      //formatacaoCondicional(plan_residencia)
      //ordenarFormatacaoCondicional(plan_residencia)
      //limparFormatacaoCondicional(plan_residencia)
      
      /*2*****************************************/

      //removerValidacaoDeDados(plan_residencia)
      //validacaoDeDados(plan_residencia)

      /*3*****************************************/

      //alterarTextos(plan_residencia)
      //deletarDados(plan_consolidado)

      /*4*****************************************/

      //incluirColunas(plan_residencia)
      //ocultarColunas(plan_residencia,2,4) ; ocultarColunas(plan_residencia,19,3)
      //deletarLinhasColunas(plan_consolidado)        
      
      /*5*****************************************/

      //protecaoDeIntervalo(plan_residencia, ultima_linha)

      /*6*****************************************/

      //congelarColunas(plan_residencia,6)
      //alterarNomeAba(plan_residencia, "RESIDÊNCIA")
      
    //
  }
}

/*1*****************************************/

function formatacaoCondicional(plan_atual){

  var range_total = plan_atual.getRange("a3:ag")
  var range_publico = plan_atual.getRange("a3:a")
  
  var regraFC_marca = SpreadsheetApp.newConditionalFormatRule()
    .whenFormulaSatisfied('=AND($Z3<>"";$AC3<>"";$Z3<>$AC3)')
    .setBackground("#ff0000")
    .setRanges([range_total])
  .build();

  var regraFC_local_outro = SpreadsheetApp.newConditionalFormatRule()
    .whenFormulaSatisfied('=$AB3="Outro local (especificado em observações)"')
    .setBackground("#d5a6bd")
    .setRanges([range_total])
  .build();

  var regraFC_local_cs = SpreadsheetApp.newConditionalFormatRule()
    .whenFormulaSatisfied('=$AB3="Centro de saúde"')
    .setBackground("#ffe599")
    .setRanges([range_total])
  .build();

  var regraFC_dose1 = SpreadsheetApp.newConditionalFormatRule()
    .whenFormulaSatisfied("=$AA3")
    .setBackground("#b7e1cd")
    .setRanges([range_total])
  .build();

  var regraFC_duplicados = SpreadsheetApp.newConditionalFormatRule()
    .whenFormulaSatisfied("=COUNTIF($H:$H;$H:$H)>1")
    .setBackground("#ff00ff")
    .setRanges([range_total])
  .build();

  var regraFC_89anos = SpreadsheetApp.newConditionalFormatRule()
    .whenTextContains("89")
    .setFontColor("#ff0000")
    .setRanges([range_publico])
  .build();

  var regraFC_88anos = SpreadsheetApp.newConditionalFormatRule()
    .whenTextContains("88")
    .setFontColor("#4285f4")
    .setRanges([range_publico])
  .build();

  var regraFC_85anos = SpreadsheetApp.newConditionalFormatRule()
    .whenTextContains("85")
    .setFontColor("#bf9000")
    .setRanges([range_publico])
  .build();

  var regras = plan_atual.getConditionalFormatRules()
  
  regras.push(regraFC_marca)
  regras.push(regraFC_duplicados)
  regras.push(regraFC_local_outro)
  regras.push(regraFC_local_cs)
  regras.push(regraFC_dose1)
  regras.push(regraFC_89anos)
  regras.push(regraFC_88anos)
  regras.push(regraFC_85anos)
  plan_atual.setConditionalFormatRules(regras)

}
function ordenarFormatacaoCondicional(plan_atual){
  var n_formatacoes = plan_atual.getConditionalFormatRules().length
  

  for(var j = 0; j<n_formatacoes; j++){
    var cor_fundo = plan_atual.getConditionalFormatRules()[j].getBooleanCondition().getBackground()
    var range = plan_atual.getConditionalFormatRules()[j].getRanges()[0].getA1Notation()

    //Logger.log(range.substr(0,5))

    if(range.substr(0,5)=="A3:AG"){
      switch(cor_fundo){
        case "#FF0000":
          var fc1 = plan_atual.getConditionalFormatRules()[j]
          break;
        case "#FF00FF":
          var fc2 = plan_atual.getConditionalFormatRules()[j]
          break;
        case "#D5A6BD":
          var fc3 = plan_atual.getConditionalFormatRules()[j]
          break;
        case "#FFE599":
          var fc4 = plan_atual.getConditionalFormatRules()[j]
          break;
        case "#B7E1CD":
          var fc5 = plan_atual.getConditionalFormatRules()[j]
          break;
      }
    }
  }

  plan_atual.clearConditionalFormatRules()

  var regras = plan_atual.getConditionalFormatRules()

  regras.push(fc1)
  regras.push(fc2)
  regras.push(fc3)
  regras.push(fc4)
  regras.push(fc5)
  plan_atual.setConditionalFormatRules(regras)

}
function limparFormatacaoCondicional(plan_residencia){
  plan_residencia.clearConditionalFormatRules()
}

/*2*****************************************/

function removerValidacaoDeDados(plan_atual){
  plan_atual.getRange("a2:ae").setDataValidation(null)
}
function validacaoDeDados(plan_atual){
  plan_atual.getRange("2:2").setDataValidation(null)

  /*var regraVD_marca = SpreadsheetApp.newDataValidation().requireValueInList(["AstraZeneca","CoronaVac"],true).setAllowInvalid(false).build()
  var regraVD_data = SpreadsheetApp.newDataValidation().requireDate().setHelpText("Esta coluna só recebe datas! Caso julgue necessário use o campo de observações!").setAllowInvalid(false).build()
  var regraVD_local = SpreadsheetApp.newDataValidation().requireValueInList(["Equipe volante","Centro de saúde","Outro local (especificado em observações)"],true).setAllowInvalid(false).build()

  plan_atual.getRange("x2:x").setDataValidation(regraVD_marca)
  plan_atual.getRange("aa2:aa").setDataValidation(regraVD_marca)

  plan_atual.getRange("v2:v").setDataValidation(regraVD_data)
  plan_atual.getRange("w2:w").setDataValidation(regraVD_data)
  plan_atual.getRange("y2:y").setDataValidation(regraVD_data)
  plan_atual.getRange("ab2:ab").setDataValidation(regraVD_data)
  plan_atual.getRange("ac2:ac").setDataValidation(regraVD_data)

  plan_atual.getRange("z2:z").setDataValidation(regraVD_local)
  plan_atual.getRange("ad2:ad").setDataValidation(regraVD_local)*/

  var regraVD_publico = SpreadsheetApp.newDataValidation().requireValueInList(["89 + anos","86 - 88 anos","80 - 85 anos"],true).setAllowInvalid(false).build()
  plan_atual.getRange("a3:a").setDataValidation(regraVD_publico)

}

/*3*****************************************/

function alterarTextos(plan_atual){
  /*plan_atual.getRange(1,24).setValue("MARCA DA 1ª DOSE")
  plan_atual.getRange(1,25).setValue("DATA 1ª DOSE")
  plan_atual.getRange(1,26).setValue("QUEM ADMINISTROU 1ª DOSE")
  plan_atual.getRange(1,27).setValue("MARCA DA 2ª DOSE")
  plan_atual.getRange(1,28).setValue("DATA 2ª DOSE")
  plan_atual.getRange(1,29).setValue("QUEM ADMINISTROU 2ª DOSE")

  plan_atual.getRange(1,1).setValue("Cadastrados")
  plan_atual.getRange(1,2).setValue("Agendados")
  plan_atual.getRange(1,3).setValue("1ª dose - AstraZeneca - Equipe volante")
  plan_atual.getRange(1,4).setValue("1ª dose - CoronaVac - Equipe volante")
  plan_atual.getRange(1,5).setValue("2ª dose - AstraZeneca - Equipe volante")
  plan_atual.getRange(1,6).setValue("2ª dose - CoronaVac - Equipe volante")

  var nome_astrazeneca = '"AstraZeneca"'
  var nome_coronavac = '"CoronaVac"'
  var nome_equipevolante = '"Equipe volante"'
  var maior_0 = '">0"'

  plan_atual.getRange(2,1).setValue("=COUNTA('RESIDÊNCIA'!F2:F)")
  plan_atual.getRange(2,2).setValue("=COUNTA('RESIDÊNCIA'!W2:W)")
  plan_atual.getRange(2,3).setValue("=COUNTIFS('RESIDÊNCIA'!$X$2:$X;" + nome_astrazeneca + ";'RESIDÊNCIA'!$Y$2:$Y;" + maior_0 + ";'RESIDÊNCIA'!$Z$2:$Z;" + nome_equipevolante + ")")
  plan_atual.getRange(2,4).setValue("=COUNTIFS('RESIDÊNCIA'!$X$2:$X;" + nome_coronavac + ";'RESIDÊNCIA'!$Y$2:$Y;" + maior_0 + ";'RESIDÊNCIA'!$Z$2:$Z;" + nome_equipevolante + ")")
  plan_atual.getRange(2,5).setValue("=COUNTIFS('RESIDÊNCIA'!$AA$2:$AA;" + nome_astrazeneca + ";'RESIDÊNCIA'!$AB$2:$AB;" + maior_0 + ";'RESIDÊNCIA'!$AC$2:$AC;" + nome_equipevolante + ")")
  plan_atual.getRange(2,6).setValue("=COUNTIFS('RESIDÊNCIA'!$AA$2:$AA;" + nome_coronavac + ";'RESIDÊNCIA'!$AB$2:$AB;" + maior_0 + ";'RESIDÊNCIA'!$AC$2:$AC;" + nome_equipevolante + ")")*/

  /*plan_atual.getRange(1,28).setValue("DATA PROGRAMADA 2º DOSE")
  plan_atual.getRange(1,29).setValue("DATA REALIZADA 2º DOSE")*/

  /*plan_atual.getRange("AB2").setValue('=IF(OR(Y2="";X2="");"";IF(X2="CoronaVac";Y2+15;Y2+90))')
  plan_atual.getRange("AB2").copyTo(plan_atual.getRange("AB3:AB"))*/

  plan_atual.getRange("A1").setValue("PÚBLICO")
}
function deletarDados(plan_atual){
  plan_atual.getRange("1:1").clearContent()
  plan_atual.getRange("1001:1001").clearContent()
}

/*4*****************************************/

function incluirColunas(plan_atual){
  /*plan_atual.insertColumnAfter(25)
  plan_atual.insertColumnsAfter(24,2)
  plan_atual.insertColumnAfter(23)*/

  plan_atual.insertColumnBefore(1)
}
function ocultarColunas(plan_atual,col_inicial,num_cols){
  plan_atual.hideColumns(col_inicial,num_cols)
}
function deletarLinhasColunas(plan_consolidado){

  var n_colunas = plan_consolidado.getMaxColumns()
  var n_linhas = plan_consolidado.getMaxRows()

  if(n_colunas > 6){
    plan_consolidado.deleteColumns(7,n_colunas-6)
  }
  if(n_linhas > 2){
    plan_consolidado.deleteRows(3,n_linhas-2)
  }

  plan_consolidado.getRange("a2:f2").setNumberFormat("0")
}

/*5*****************************************/

function protecaoDeIntervalo(plan_atual, ul){
  var protecoes_atuais = plan_atual.getProtections(SpreadsheetApp.ProtectionType.RANGE)
  for(let n = 0 ; n < protecoes_atuais.length ; n++ ){
    var protecao_atual = protecoes_atuais[n]
    if(protecao_atual && protecao_atual.canEdit()){
      protecao_atual.remove()
    }
  }
  var protecao1001 = plan_atual.getRange(ul + ":" + ul).protect()
  protecao1001.removeEditors(protecao1001.getEditors())
  protecao1001.addEditor("e-mail do editor 1")
  protecao1001.addEditor("e-mail do editor 2")

  var protecaoAB = plan_atual.getRange("AB2:AB").protect()
  protecaoAB.removeEditors(protecaoAB.getEditors())
  protecaoAB.addEditor("e-mail do editor 1")
  protecaoAB.addEditor("e-mail do editor 2")
}

/*6*****************************************/

function congelarColunas(plan_atual,coluna){
  plan_atual.setFrozenColumns(coluna)
}
function alterarNomeAba(plan_atual,novo_nome){
  plan_atual.setName(novo_nome)
}
